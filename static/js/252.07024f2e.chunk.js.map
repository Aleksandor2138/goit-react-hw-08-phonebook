{"version":3,"file":"static/js/252.07024f2e.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Filter/Filter.module.scss?8b23","components/Phonebook/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactForm/ContactForm.module.scss?2da9","components/Phonebook/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactList/ContactList.module.scss?fdbd","components/Phonebook/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Phonebook.module.scss?e489","pages/Phonebook.jsx"],"sourcesContent":["export const selectItem = state => state.contacts.item;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\nexport const selectFilter = state => state.filters.filter;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__Ex1A5\",\"input\":\"Filter_input__+jX2l\",\"par\":\"Filter_par__NwWoq\"};","import { useDispatch, useSelector } from 'react-redux';\r\nimport { filterValue } from '../../../redux/contacts/filterSlise';\r\nimport { selectFilter } from '../../../redux/contacts/contactsSelectors';\r\n// import PropTypes from 'prop-types';\r\nimport FilterSCSS from './Filter.module.scss';\r\n\r\nexport const Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectFilter);\r\n  const onChange = event => {\r\n    dispatch(filterValue(event.target.value.toLowerCase()));\r\n  };\r\n  return (\r\n    <label htmlFor=\"filter\" className={FilterSCSS.label}>\r\n      {/* <p className={FilterSCSS.par}>Find contacts by name</p> */}\r\n      <input\r\n        className={FilterSCSS.input}\r\n        onChange={onChange}\r\n        type=\"filter\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        placeholder=\"Find contacts by name\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__TCXtu\",\"label\":\"ContactForm_label__zVCV3\",\"paragraph\":\"ContactForm_paragraph__8Rwen\",\"input\":\"ContactForm_input__PjN8o\",\"button\":\"ContactForm_button__gIpeG\"};","import { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport { selectItem } from 'redux/contacts/contactsSelectors';\r\nimport { addContact } from 'redux/contacts/requestAPI';\r\nimport ContactFormSCSS from './ContactForm.module.scss';\r\n\r\nconst BASE_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst ContactForm = () => {\r\n  const [{ name, number }, setState] = useState(BASE_STATE);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectItem);\r\n\r\n  function onChange(eve) {\r\n    const { name, value } = eve.target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  }\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.some(x => x.name === newContact.name)) {\r\n      alert(`${newContact.name} is already is contacts`);\r\n      return;\r\n    }\r\n    dispatch(addContact(newContact));\r\n    setState({ ...BASE_STATE });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={ContactFormSCSS.form}>\r\n      <label htmlFor=\"name\" className={ContactFormSCSS.label}>\r\n        <p className={ContactFormSCSS.paragraph}>Name</p>\r\n        <input\r\n          className={ContactFormSCSS.input}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          placeholder=\"Rosie Simpson\"\r\n        />\r\n      </label>\r\n\r\n      <label htmlFor=\"number\" className={ContactFormSCSS.label}>\r\n        <p className={ContactFormSCSS.paragraph}>Number</p>\r\n        <input\r\n          className={ContactFormSCSS.input}\r\n          onChange={onChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"645-17-79\"\r\n        />\r\n      </label>\r\n\r\n      <button className={ContactFormSCSS.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__xDNud\",\"item\":\"ContactList_item__QtaYu\",\"par\":\"ContactList_par__DuxpW\",\"button\":\"ContactList_button__zafWS\"};","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { selectItem } from 'redux/contacts/contactsSelectors';\r\nimport { deleteContact } from 'redux/contacts/requestAPI';\r\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\r\nimport ContactListSCSS from './ContactList.module.scss';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectItem);\r\n  const filter = useSelector(selectFilter);\r\n  const delContacts = event => {\r\n    dispatch(deleteContact(event.target.name));\r\n  };\r\n  const contactFilter = () => {\r\n    if (filter === '') {\r\n      return false;\r\n    }\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  };\r\n  const filterOne = contactFilter();\r\n  const list = filterOne ? filterOne : contacts;\r\n  return (\r\n    <ul className={ContactListSCSS.list}>\r\n      {list.map(({ id, name, number }) => (\r\n        <li key={id} className={ContactListSCSS.item}>\r\n          <p className={ContactListSCSS.par}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={ContactListSCSS.button}\r\n            type=\"button\"\r\n            name={id}\r\n            onClick={delContacts}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n//   deleteContacts: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Phonebook_section__o6Vkf\",\"container\":\"Phonebook_container__1MyeN\",\"header\":\"Phonebook_header__oGb6W\",\"bottom\":\"Phonebook_bottom__7JVs-\",\"contacts\":\"Phonebook_contacts__sXR8K\",\"h2\":\"Phonebook_h2__8luz2\"};","import { useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAll } from 'redux/contacts/requestAPI';\r\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\r\nimport { Loader } from '../components/Loader/Loader';\r\nimport { Filter } from '../components/Phonebook/Filter/Filter';\r\nimport ContactForm from '../components/Phonebook/ContactForm/ContactForm';\r\nimport ContactList from '../components/Phonebook/ContactList/ContactList';\r\n// import { Section, Containet, H1, DivList } from '../components/App.stiled';\r\nimport PhonebookSCSS from './Phonebook.module.scss'\r\n\r\nconst PhoneBook = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAll());\r\n    }, [dispatch]);\r\n    return (\r\n        <section className={PhonebookSCSS.section}>\r\n            <div className={PhonebookSCSS.container}>\r\n                {isLoading && !error && <Loader />}\r\n                <h1 className={PhonebookSCSS.header}>Phonebook</h1>\r\n                <Filter />\r\n                <div className={PhonebookSCSS.bottom}>\r\n                    <ContactForm />\r\n                    <div className={PhonebookSCSS.contacts}>\r\n                        <h2 className={PhonebookSCSS.h2}>Contacts</h2> \r\n                        <ContactList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default PhoneBook;"],"names":["selectItem","state","contacts","item","selectIsLoading","isLoading","selectError","error","selectFilter","filters","filter","Filter","dispatch","useDispatch","useSelector","htmlFor","className","FilterSCSS","onChange","event","filterValue","target","value","toLowerCase","type","name","placeholder","BASE_STATE","number","useState","setState","eve","prevState","onSubmit","preventDefault","newContact","some","x","alert","addContact","ContactFormSCSS","pattern","title","required","delContacts","deleteContact","filterOne","contact","includes","list","ContactListSCSS","map","id","onClick","useEffect","fetchAll","PhonebookSCSS","Loader"],"sourceRoot":""}