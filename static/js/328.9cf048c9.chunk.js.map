{"version":3,"file":"static/js/328.9cf048c9.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/Phonebook/Filter/Filter.styled.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/ContactForm/ContactForm.styled.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/ContactList/ContactList.styled.js","components/Phonebook/ContactList/ContactList.jsx","components/App.stiled.js","pages/Phonebook.jsx"],"sourcesContent":["export const selectItem = state => state.contacts.item;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters.filter;","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  display: block;\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 10px;\n  font-size: 1em;\n`;\n\nexport const Span = styled.span`\n  margin-top: 20px;\n  display: block;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from '../../../redux/contacts/filterSlise';\nimport { selectFilter } from '../../../redux/contacts/contactsSelectors';\n// import PropTypes from 'prop-types';\nimport { Input, Span } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const onChange = event => {\n    dispatch(filterValue(event.target.value.toLowerCase()));\n  };\n  return (\n    <label htmlFor=\"filter\">\n      <Span>Find contacts by name</Span>\n      <Input onChange={onChange} type=\"filter\" name=\"filter\" value={filter} />\n    </label>\n  );\n};\n\n// Filter.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  width: 70%;\n  margin: 10px auto 0 auto;\n  padding: 5px 10px;\n  display: block;\n  border-radius: 10px;\n  font-size: 1em;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  margin-top: 20px;\n  padding: 5px 10px;\n  display: block;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  background: transparent;\n  border: 0 solid;\n  border-radius: 3px;\n  box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 0%);\n  color: #fff;\n  outline: 2px solid;\n  outline-color: hsla(0, 0%, 100%, 0.5);\n  outline-offset: 0;\n  position: relative;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: uppercase;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { selectItem } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/requestAPI';\nimport { Span, Input, Button, Form } from './ContactForm.styled';\n\nconst BASE_STATE = {\n  name: '',\n  number: '',\n};\nconst ContactForm = () => {\n  const [{ name, number }, setState] = useState(BASE_STATE);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItem);\n\n  function onChange(eve) {\n    const { name, value } = eve.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  }\n  const onSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    if (contacts.some(x => x.name === newContact.name)) {\n      alert(`${newContact.name} is already is contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    setState({ ...BASE_STATE });\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <label htmlFor=\"name\">\n        <Span>Name</Span>\n        <Input\n          onChange={onChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Rosie Simpson\"\n        />\n      </label>\n\n      <label htmlFor=\"number\">\n        <Span>Number</Span>\n        <Input\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"645-17-79\"\n        />\n      </label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: grid;\n  gap: 15px;\n`;\n\nexport const Elements = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const NameContacts = styled.p`\n  font-size: 1.2em;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 5px;\n  font-size: 0.8em;\n  border-radius: 5px;\n  background-color: rgba(255, 216, 0, 0.9);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { selectItem } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/requestAPI';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { NameContacts, List, Elements, Button } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItem);\n  const filter = useSelector(selectFilter);\n  const delContacts = event => {\n    dispatch(deleteContact(event.target.name));\n  };\n  const contactFilter = () => {\n    if (filter === '') {\n      return false;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n  const filterOne = contactFilter();\n  const list = filterOne ? filterOne : contacts;\n  return (\n    <List>\n      {list.map(({ id, name, number }) => (\n        <Elements key={id}>\n          <NameContacts>\n            {name}: {number}\n          </NameContacts>\n          <Button type=\"button\" name={id} onClick={delContacts}>\n            Delete\n          </Button>\n        </Elements>\n      ))}\n    </List>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deleteContacts: PropTypes.func.isRequired,\n// };\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Quicksand', sans-serif;\n  color: white;\n`;\n\nexport const Containet = styled.div`\n  padding: 20px 30px;\n  background: #0056b8;\n  border-radius: 6px;\n  backdrop-filter: blur(15px);\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\n  border-left: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 5px 5px 30px rgb(0 0 0 / 20%);\n`;\n\nexport const H1 = styled.h1`\n  text-align: center;\n`;\n\nexport const DivList = styled.div`\n  margin-top: 30px;\n  padding: 20px 30px;\n  width: 500px;\n  background: #0056b8;\n  border-radius: 6px;\n  backdrop-filter: blur(15px);\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\n  border-left: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 5px 5px 30px rgb(0 0 0 / 20%);\n`;\n","import { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAll } from 'redux/contacts/requestAPI';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { Loader } from '../components/Loader/Loader';\nimport { Filter } from '../components/Phonebook/Filter/Filter';\nimport ContactForm from '../components/Phonebook/ContactForm/ContactForm';\nimport ContactList from '../components/Phonebook/ContactList/ContactList';\nimport { Section, Containet, H1, DivList } from '../components/App.stiled';\n\nconst PhoneBook = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchAll());\n    }, [dispatch]);\n    return (\n        <Section>\n            <Containet>\n                <div>\n                    <H1>Phonebook</H1>\n                    <ContactForm />\n                </div>\n\n                <DivList>\n                    <h2>Contacts</h2>\n                    <Filter />\n                    {isLoading && !error && <Loader />}\n                    <ContactList />\n                </DivList>\n            </Containet>\n        </Section>\n    )\n}\nexport default PhoneBook;"],"names":["selectItem","state","contacts","item","selectIsLoading","isLoading","selectError","error","selectFilter","filters","filter","Input","styled","Span","Filter","dispatch","useDispatch","useSelector","htmlFor","onChange","event","filterValue","target","value","toLowerCase","type","name","Form","Button","BASE_STATE","number","useState","setState","eve","prevState","onSubmit","preventDefault","newContact","some","x","alert","addContact","pattern","title","required","placeholder","List","Elements","NameContacts","delContacts","deleteContact","filterOne","contact","includes","list","map","id","onClick","Section","Containet","H1","DivList","useEffect","fetchAll","Loader"],"sourceRoot":""}